syntax = "proto3";

package bidirectional;

// bidirectional services allow for continous streaming between client and server
// see docs for more in depth description of function
service Bidirectional {
   rpc ServerSend(Text) returns (Res) {}
   rpc ChangeAccountState(Account) returns (Res) {}
   rpc ClientStream(Account) returns (stream Text) {}
   rpc ListAccounts(Query) returns (List) {}
}

// struct for sending messages 
message Text {
  string sender = 1; 
  string receiver = 2; 
  string message = 3;
}

// struct for changing account state
message Account { 
  int32 type = 1; 
  string username = 2; 
  string connection = 3;  
}

// list accounts query
message Query { 
  string match = 1;
  int32 number = 2; 
}

// list of accounts returned on query
message List { 
  string list = 1; 
}

// general purpose res message 
message Res { 
  int32 status = 1;
}

message Void {}

// use this to rebuild stubs
// python -m grpc_tools.protoc --proto_path=.  ./wire.proto --python_out=. --grpc_python_out=.